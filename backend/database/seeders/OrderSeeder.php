<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Order;
use App\Models\OrderItem;
use App\Models\Product;
use App\Models\User;
use Illuminate\Support\Facades\DB;

class OrderSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $this->command->info('๐ฆ ุฅูุดุงุก ุงูุทูุจุงุช ุงูุชุฌุฑูุจูุฉ...');

        // ูุธู ุงูุจูุงูุงุช ุงูููุฌูุฏุฉ
        DB::table('order_items')->truncate();
        DB::table('orders')->truncate();

        // ุฌูุจ ุงูุนููุงุก ูุงูููุชุฌุงุช
        $customers = User::role('customer')->get();
        $products = Product::all();

        if ($customers->isEmpty() || $products->isEmpty()) {
            $this->command->info('โ ูุง ูููู ุฅูุดุงุก ุงูุทูุจุงุช. ุงูุฑุฌุงุก ุงูุชุฃูุฏ ูู ูุฌูุฏ ุนููุงุก ูููุชุฌุงุช ุฃููุงู.');
            return;
        }

        $orderStatuses = ['ordered', 'delivered', 'canceled'];
        $paymentMethods = ['cod', 'card'];
        $cities = ['ุงูุฏุงุฑ ุงูุจูุถุงุก', 'ุงูุฑุจุงุท', 'ูุฑุงูุด', 'ูุงุณ', 'ุฃูุงุฏูุฑ', 'ุทูุฌุฉ', 'ูุฌุฏุฉ', 'ุชุทูุงู'];
        $states = ['ุงูุฏุงุฑ ุงูุจูุถุงุก-ุณุทุงุช', 'ุงูุฑุจุงุท-ุณูุง-ุงููููุทุฑุฉ', 'ูุฑุงูุด-ุขุณูู', 'ูุงุณ-ูููุงุณ', 'ุณูุณ-ูุงุณุฉ', 'ุทูุฌุฉ-ุชุทูุงู-ุงูุญุณููุฉ', 'ุงูุดุฑู', 'ุจูู ููุงู-ุฎูููุฑุฉ'];

        // ุฅูุดุงุก 25 ุทูุจ ุชุฌุฑูุจู
        for ($i = 0; $i < 25; $i++) {
            $customer = $customers->random();
            $status = $orderStatuses[array_rand($orderStatuses)];
            $paymentMethod = $paymentMethods[array_rand($paymentMethods)];
            $city = $cities[array_rand($cities)];
            $state = $states[array_rand($states)];

            // ุญุณุงุจ ุชุงุฑูุฎ ุนุดูุงุฆู ุฎูุงู ุงูู 30 ููู ุงููุงุถูุฉ
            $createdAt = now()->subDays(rand(0, 30))->subHours(rand(0, 23))->subMinutes(rand(0, 59));

            $order = Order::create([
                'user_id' => $customer->id,
                'order_number' => 'ORD-' . str_pad($i + 1, 6, '0', STR_PAD_LEFT),
                'subtotal' => 0, // ุณูุชู ุญุณุงุจู ูุงุญูุงู
                'discount' => rand(0, 1) ? rand(50, 500) : 0,
                'tax' => 0,
                'total' => 0, // ุณูุชู ุญุณุงุจู ูุงุญูุงู
                'total_amount' => 0, // ุณูุชู ุญุณุงุจู ูุงุญูุงู
                'name' => $customer->name,
                'phone' => '0' . rand(6, 7) . rand(10000000, 99999999),
                'address' => 'ุดุงุฑุน ' . rand(1, 100) . 'ุ ุญู ' . ['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู'][array_rand(['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู'])],
                'locality' => ['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู', 'ุงููุฎูู', 'ุงูุณูุงู'][array_rand(['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู', 'ุงููุฎูู', 'ุงูุณูุงู'])],
                'city' => $city,
                'state' => $state,
                'country' => 'ุงููุบุฑุจ',
                'zip' => rand(10000, 99999),
                'shipping_name' => $customer->name,
                'shipping_email' => $customer->email,
                'shipping_phone' => '0' . rand(6, 7) . rand(10000000, 99999999),
                'shipping_address' => 'ุดุงุฑุน ' . rand(1, 100) . 'ุ ุญู ' . ['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู'][array_rand(['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู'])],
                'shipping_city' => $city,
                'shipping_state' => $state,
                'shipping_postal_code' => rand(10000, 99999),
                'shipping_method' => 'standard',
                'currency' => 'MAD',
                'status' => $status,
                'payment_method' => $paymentMethod,
                'payment_status' => $paymentMethod === 'cod' ? 'pending' : ($status === 'delivered' ? 'paid' : 'pending'),
                'notes' => rand(0, 1) ? 'ููุงุญุธุงุช ุฎุงุตุฉ ุจุงูุทูุจ ุฑูู ' . ($i + 1) : null,
                'created_at' => $createdAt,
                'updated_at' => $createdAt,
            ]);

            // ุฅุถุงูุฉ ุนูุงุตุฑ ุงูุทูุจ
            $numberOfItems = rand(1, 4);
            $subtotal = 0;

            for ($j = 0; $j < $numberOfItems; $j++) {
                $product = $products->random();
                $quantity = rand(1, 3);
                $price = $product->sale_price ?? $product->regular_price;
                $itemTotal = $quantity * $price;
                $subtotal += $itemTotal;

                OrderItem::create([
                    'order_id' => $order->id,
                    'product_id' => $product->id,
                    'quantity' => $quantity,
                    'price' => $price,
                    'total' => $itemTotal,
                    'product_name' => $product->name,
                    'product_sku' => $product->SKU,
                ]);
            }

            // ุชุญุฏูุซ ุงููุฌุงููุน ูู ุงูุทูุจ
            $shippingCost = $subtotal > 500 ? 0 : 50; // ุดุญู ูุฌุงูู ููุทูุจุงุช ุฃูุซุฑ ูู 500 ุฏุฑูู
            $total = $subtotal + $shippingCost - $order->discount;

            $order->update([
                'subtotal' => $subtotal,
                'shipping_cost' => $shippingCost,
                'total' => $total,
                'total_amount' => $total,
            ]);

            // ุชุญุฏูุซ ุชุงุฑูุฎ ุงูุญุงูุฉ ุญุณุจ ุงูุญุงูุฉ
            if ($status === 'delivered') {
                $order->update(['delivered_at' => $createdAt->addDays(rand(1, 7))]);
            } elseif ($status === 'canceled') {
                $order->update(['canceled_date' => $createdAt->addDays(rand(0, 3))]);
            }
        }

        // ุฅูุดุงุก ุจุนุถ ุงูุทูุจุงุช ุงูุญุฏูุซุฉ (ุงูููู)
        for ($i = 0; $i < 5; $i++) {
            $customer = $customers->random();
            $createdAt = now()->subHours(rand(0, 12));

            $order = Order::create([
                'user_id' => $customer->id,
                'order_number' => 'ORD-R-' . str_pad($i + 26, 6, '0', STR_PAD_LEFT),
                'subtotal' => 0,
                'discount' => 0,
                'tax' => 0,
                'total' => 0,
                'total_amount' => 0,
                'name' => $customer->name,
                'phone' => '0' . rand(6, 7) . rand(10000000, 99999999),
                'address' => 'ุดุงุฑุน ุงูุญุฑูุฉุ ุฑูู ' . rand(1, 200),
                'locality' => ['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู'][array_rand(['ุงููุญูุฏูุฉ', 'ุงูุฃูุฏูุณ', 'ุงูุฑูุงุถ', 'ุงููุนุงุฑู'])],
                'city' => $cities[array_rand($cities)],
                'state' => $states[array_rand($states)],
                'country' => 'ุงููุบุฑุจ',
                'zip' => rand(10000, 99999),
                'shipping_name' => $customer->name,
                'shipping_email' => $customer->email,
                'shipping_phone' => '0' . rand(6, 7) . rand(10000000, 99999999),
                'shipping_address' => 'ุดุงุฑุน ุงูุญุฑูุฉุ ุฑูู ' . rand(1, 200),
                'shipping_city' => $cities[array_rand($cities)],
                'shipping_state' => $states[array_rand($states)],
                'shipping_postal_code' => rand(10000, 99999),
                'shipping_method' => 'standard',
                'currency' => 'MAD',
                'status' => 'ordered',
                'payment_method' => $paymentMethods[array_rand($paymentMethods)],
                'payment_status' => 'pending',
                'notes' => 'ุทูุจ ุญุฏูุซ - ุงูููู',
                'created_at' => $createdAt,
                'updated_at' => $createdAt,
            ]);

            // ุฅุถุงูุฉ ููุชุฌุงุช ููุทูุจ ุงูุญุฏูุซ
            $product = $products->random();
            $quantity = rand(1, 2);
            $price = $product->sale_price ?? $product->regular_price;
            $itemTotal = $quantity * $price;

            OrderItem::create([
                'order_id' => $order->id,
                'product_id' => $product->id,
                'quantity' => $quantity,
                'price' => $price,
                'total' => $itemTotal,
                'product_name' => $product->name,
                'product_sku' => $product->SKU,
            ]);

            $shippingCost = $itemTotal > 500 ? 0 : 50;
            $order->update([
                'subtotal' => $itemTotal,
                'shipping_cost' => $shippingCost,
                'total' => $itemTotal + $shippingCost,
                'total_amount' => $itemTotal + $shippingCost,
            ]);
        }

        $totalOrders = Order::count();
        $this->command->info("โ ุชู ุฅูุดุงุก {$totalOrders} ุทูุจ ุชุฌุฑูุจู ุจุญุงูุงุช ูุฎุชููุฉ");
    }
}
